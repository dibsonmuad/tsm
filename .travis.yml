language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=xenial
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps

matrix:
  include:
    - os: linux
      dist: xenial
      sudo: true
      compiler: g++
      addons:
       apt:
         packages:
           # Misc
           - python-yaml
           - lcov
           - doxygen
           - doxygen-doc
           - graphviz
         sources: 
    
before_install:

install:
    - sudo pip install codecov

    # Download and install recent cmake
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        CMAKE_URL="http://www.cmake.org/files/v3.12/cmake-3.12.2-Linux-x86_64.tar.gz"
        mkdir -p ${DEPS_DIR}/cmake
        travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      fi
script:
    ############################################################################
    # Build main and tests
    ############################################################################
     - mkdir -p build
     - cd build
     - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DBUILD_DEPENDENCIES=ON ..
     - make
     - cmake ${CMAKE_OPTIONS} -DBUILD_COVERAGE=ON -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DBUILD_DEPENDENCIES=OFF ..
     - make coverage
     - ctest

after_success:
    # Creating report
    - cd ${TRAVIS_BUILD_DIR}
    # Uploading report to CodeCov
    - bash <(curl -s https://codecov.io/bash) -s . -f lcov.info || echo "Codecov did not collect coverage reports"

    # Generate the docs only if master, the travis_build_docs is true and we can use secure variables
    - >-
      if [[ "$TRAVIS_BRANCH" = "master" && -n "$TRAVIS_BUILD_DOCS" && "$TRAVIS_PULL_REQUEST" = "false" ]] ; then
        cd $PROJECT_DIR_ABS
        source .ci/setup_ssh.sh || travis_terminate 1
        .ci/gen_doc.sh || travis_terminate 1
      fi
after_failure:
  # show actions of the OOM killer
  - sudo dmesg
